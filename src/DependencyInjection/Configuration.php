<?php

/*
 * Brokerage Bundle
 */

declare(strict_types=1);

namespace StocksApiBundles\BrokerageClient\DependencyInjection;

use StocksApiBundles\BrokerageClient\Constants\Configuration as Config;
use Symfony\Component\Config\Definition\Builder\TreeBuilder;
use Symfony\Component\Config\Definition\ConfigurationInterface;

/**
 * Class Configuration.
 */
class Configuration implements ConfigurationInterface
{
    public function getConfigTreeBuilder()
    {
        $treeBuilder = new TreeBuilder('stocks_api_brokerage');

        if (!method_exists($treeBuilder, 'getRootNode')) {
            $rootNode = $treeBuilder->root('stocks_api_brokerage');
        } else {
            $rootNode = $treeBuilder->getRootNode();
        }

        $rootNode
            ->children()
                ->arrayNode(Config::BROKERAGES)
                    ->cannotBeOverwritten()
                    ->useAttributeAsKey('name')
                    ->arrayPrototype()
                        ->children()
                            ->booleanNode('enabled')
                                ->defaultFalse()
                            ->end()
                            ->arrayNode(Config::BROKERAGE_CONFIG_MAP)
                                ->isRequired()
                                ->children()
                                    ->arrayNode('request_headers')
                                        ->isRequired()
                                        ->useAttributeAsKey('name')
                                        ->children()
                                            ->scalarNode('value')
                                        ->end()
                                    ->end()
                                    ->scalarNode('return_data_type')
                                        ->isRequired()
                                        ->cannotBeEmpty()
                                    ->end()
                                    ->arrayNode('endpoints')
                                        ->isRequired()
                                        ->useAttributeAsKey('name')
                                        ->children()
                                            ->scalarNode('uri')
                                                ->isRequired()
                                                ->cannotBeEmpty()
                                            ->end()
                                            ->arrayNode('itemOperations')
                                                ->cannotBeEmpty()
                                                ->useAttributeAsKey()
                                                ->children()
                                                    ->scalarNode('method')
                                                        ->isRequired()
                                                        ->cannotBeEmpty()
                                                    ->end()
                                                    ->arrayNode('parameters')
                                                        ->cannotBeEmpty()
                                                        ->useAttributeAsKey()
                                                        ->children()
                                                            ->scalarNode('type')
                                                                ->isRequired()
                                                                ->cannotBeEmpty()
                                                            ->end()
                                                            ->arrayPrototype('options')
                                                                ->cannotBeEmpty()
                                                                ->children()
                                                                    ->scalarPrototype()->end()
                                                                ->end()
                                                            ->end()
                                                            ->booleanNode('required')
                                                                ->default(false)
                                                            ->end()
                                                        ->end()
                                                    ->end()
                                                ->end()
                                            ->end()
                                            ->arrayNode('collectionOperations')
                                                ->cannotBeEmpty()
                                                ->useAttributeAsKey()
                                                ->children()
                                                    ->scalarNode('method')
                                                        ->isRequired()
                                                        ->cannotBeEmpty()
                                                    ->end()
                                                    ->arrayNode('parameters')
                                                        ->cannotBeEmpty()
                                                        ->useAttributeAsKey()
                                                        ->children()
                                                            ->scalarNode('type')
                                                                ->isRequired()
                                                                ->cannotBeEmpty()
                                                            ->end()
                                                            ->arrayPrototype('options')
                                                                ->cannotBeEmpty()
                                                                ->children()
                                                                    ->scalarPrototype()->end()
                                                                ->end()
                                                            ->end()
                                                            ->booleanNode('required')
                                                                ->default(false)
                                                            ->end()
                                                        ->end()
                                                    ->end()
                                                ->end()
                                            ->end()
                                            ->arrayNode('request')
                                                ->cannotBeEmpty()
                                                ->scalarNode('resource')
                                                    ->isRequired()
                                                    ->cannotBeEmpty()
                                                ->end()
                                                ->scalarNode('serialization')
                                                    ->isRequired()
                                                    ->cannotBeEmtpy()
                                                ->end()
                                            ->end()
                                            ->arrayNode('response')
                                                ->cannotBeEmpty()
                                                ->scalarNode('resource')
                                                    ->isRequired()
                                                    ->cannotBeEmpty()
                                                ->end()
                                                ->scalarNode('serialization')
                                                    ->isRequired()
                                                    ->cannotBeEmtpy()
                                                ->end()
                                            ->end()
                                    ->end()
                            ->scalarNode(Config::BROKERAGE_MAP_NAME)
                                ->isRequired()
                                ->cannotBeEmpty()
                            ->end()
                            ->scalarNode(Config::BROKERAGE_MAP_DESCRIPTION)
                                ->isRequired()
                                ->cannotBeEmpty()
                            ->end()
                            ->scalarNode(Config::BROKERAGE_MAP_CONTEXT)
                                ->isRequired()
                                ->cannotBeEmpty()
                                ->info('Namespace Identifier')
                            ->end()
                            ->scalarNode(Config::BROKERAGE_MAP_API_BASE)
                                ->isRequired()
                                ->cannotBeEmpty()
                                ->info('Api Endpoint for trading')
                            ->end()
                            ->scalarNode(Config::BROKERAGE_MAP_PAPER_API_BASE)
                                ->info('Api Endpoint for paper trading if available')
                            ->end()
                            ->scalarNode(Config::BROKERAGE_MAP_API_DOCUMENT_URL)
                                ->isRequired()
                                ->cannotBeEmpty()
                            ->end()
                            ->scarlarNode(Config::BROKERAGE_MAP_URL)
                                ->isRequired()
                                ->cannotBeEmpty()
                            ->end()
                            ->arrayNode(Config::BROKERAGE_MAP_ORDER_SIDE_TYPES)
                                ->useAttributeAsKey()
                                ->isRequired()
                                ->cannotBeEmpty()
                                ->arrayPrototype()
                                    ->children()
                                        ->scalarNode('description')
                                    ->end()
                                ->end()
                            ->end()
                            ->arrayNode(Config::BROKERAGE_MAP_ORDER_CLASSES)
                                ->useAttributeAsKey()
                                ->isRequired()
                                ->cannotBeEmpty()
                                ->arrayPrototype()
                                    ->children()
                                        ->scalarNode('description')
                                    ->end()
                                ->end()
                            ->end()
                            ->arrayNode(Config::BROKERAGE_MAP_ORDER_TYPES)
                                ->useAttributeAsKey()
                                ->isRequired()
                                ->cannotBeEmpty()
                                ->arrayPrototype()
                                    ->children()
                                        ->scalarNode('description')
                                    ->end()
                                ->end()
                            ->end()
                            ->arrayNode(Config::BROKERAGE_MAP_ORDER_STATUSES)
                                ->useAttributeAsKey()
                                ->isRequired()
                                ->cannotBeEmpty()
                                ->arrayPrototype()
                                    ->children()
                                        ->scalarNode('description')
                                    ->end()
                                ->end()
                            ->end()
                            ->arrayNode(Config::BROKERAGE_MAP_POSITION_SIDE_TYPES)
                                ->useAttributeAsKey()
                                ->isRequired()
                                ->cannotBeEmpty()
                                ->arrayPrototype()
                                    ->children()
                                        ->scalarNode('description')
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
            ->end()
        ->end();

        return $treeBuilder;
    }
}
